# Use a build stage with Go to compile the application
FROM golang:1.22-alpine AS build

WORKDIR /app

# Copy go.mod and go.sum for dependency downloading
COPY go.mod .
COPY go.sum .

# Download dependencies
RUN go mod download

# Copy the entire project into the container
COPY . .

# Build the application for production
RUN CGO_ENABLED=0 GOOS=linux go build -o main ./cmd

# Use a smaller Alpine-based image for production
FROM alpine:3.18

WORKDIR /app

# Copy the compiled application from the build stage
COPY --from=build /app/main /app/main

# Declare environment variables as placeholders with empty values
ENV DB_HOST=
ENV DB_PORT=
ENV DB_USER=
ENV DB_PASSWORD=
ENV DB_NAME=
ENV S3_BUCKET=
ENV REGION=
ENV AWS_ACCESS_KEY_ID=
ENV AWS_SECRET_ACCESS_KEY=
ENV CLOUDFRONT_DOMAIN=

# Set GIN_MODE environment variable to "release"
ENV GIN_MODE=release

# Expose the application's port
EXPOSE 8080

# Start the application in production mode
CMD ["./main"]
