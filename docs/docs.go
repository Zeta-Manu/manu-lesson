// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/quiz": {
            "get": {
                "description": "List all quizzes",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "quiz"
                ],
                "summary": "List all quizzes",
                "operationId": "list-quizzes",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            },
            "post": {
                "description": "Create a new quiz",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "quiz"
                ],
                "summary": "Create a new quiz",
                "operationId": "create-quiz",
                "parameters": [
                    {
                        "description": "Create quiz",
                        "name": "quiz",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.Quiz"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                }
            }
        },
        "/quiz/{id}": {
            "get": {
                "description": "Get a quiz by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "quiz"
                ],
                "summary": "Get a quiz by ID",
                "operationId": "get-quiz-by-id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Quiz ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/video": {
            "get": {
                "description": "List out all videos in s3",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "video"
                ],
                "summary": "List out all videos",
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "post": {
                "description": "Upload a video to S3",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "video"
                ],
                "summary": "Upload a video",
                "parameters": [
                    {
                        "type": "file",
                        "description": "Video file",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Unique key for the video",
                        "name": "key",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/video/{id}": {
            "get": {
                "description": "Get CloudFront url for specific id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "video"
                ],
                "summary": "Get the video url",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Video ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        }
    },
    "definitions": {
        "domain.Quiz": {
            "type": "object",
            "properties": {
                "answer": {
                    "type": "string"
                },
                "question": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/api",
	Schemes:          []string{},
	Title:            "Manu Swagger API",
	Description:      "server",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
